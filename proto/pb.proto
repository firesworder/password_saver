syntax = "proto3";

option go_package = "internal/grpc";

// аутентификация, сообщения

message RegisterUserRequest {
  string login = 1;
  string password = 2;
}

message RegisterUserResponse {
  string token = 1;
}

message LoginUserRequest {
  string login = 1;
  string password = 2;
}

message LoginUserResponse {
  string token = 1;
}

// текстовые данные, сообщения

message TextData {
  int64 id = 1;
  string textData = 2;
  string metaInfo = 3;
}

message AddTextDataRequest {
    TextData textData = 1;
}

message AddTextDataResponse {
  int64 id = 1;
}

message UpdateTextDataRequest {
  TextData textData = 1;
}

message UpdateTextDataResponse {
}

message DeleteTextDataRequest {
  TextData textData = 1;
}

message DeleteTextDataResponse {
}

// банк данные, сообщения

message BankData {
  int64 id = 1;
  string cardNumber = 2;
  string cardExpiry = 3;
  string cvv = 4;
  string metaInfo = 5;
}

message AddBankDataRequest {
    BankData bankData = 1;
}

message AddBankDataResponse {
  int64 id = 1;
}

message UpdateBankDataRequest {
  BankData bankData = 1;
}

message UpdateBankDataResponse {
}

message DeleteBankDataRequest {
  int64 id = 1;
}

message DeleteBankDataResponse {
}

// бинарные данные, сообщения

message BinaryData {
  int64 id = 1;
  bytes binaryData = 2;
  string metaInfo = 3;
}

message AddBinaryDataRequest {
  BinaryData bankData = 1;
}

message AddBinaryDataResponse {
  int64 id = 1;
}

message UpdateBinaryDataRequest {
  BinaryData bankData = 1;
}

message UpdateBinaryDataResponse {
}

message DeleteBinaryDataRequest {
  int64 id = 1;
}

message DeleteBinaryDataResponse {
}

message GetAllRecordsRequest {

}

message GetAllRecordsResponse {
  repeated TextData TextDataList = 1;
  repeated BankData BankDataList = 2;
  repeated BinaryData BinaryDataList = 3;
}

// методы
service PasswordSaver {
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse);

  // для работы с текстовыми приватными данными
  rpc AddTextDataRecord(AddTextDataRequest) returns (AddTextDataResponse);
  rpc UpdateTextDataRecord(UpdateTextDataRequest) returns (UpdateTextDataResponse);
  rpc DeleteTextDataRecord(DeleteTextDataRequest) returns (DeleteTextDataResponse);

  // для работы с банковскими приватными данными
  rpc AddBankDataRecord(AddBankDataRequest) returns (AddBankDataResponse);
  rpc UpdateBankDataRecord(UpdateBankDataRequest) returns (UpdateBankDataResponse);
  rpc DeleteBankDataRecord(DeleteBankDataRequest) returns (DeleteBankDataResponse);

  // для работы с бинарными приватными данными
  rpc AddBinaryDataRecord(AddBinaryDataRequest) returns (AddBinaryDataResponse);
  rpc UpdateBinaryDataRecord(UpdateBinaryDataRequest) returns (UpdateBinaryDataResponse);
  rpc DeleteBinaryDataRecord(DeleteBinaryDataRequest) returns (DeleteBinaryDataResponse);

  // показать все приватные данные
  rpc GetAllRecords(GetAllRecordsRequest) returns (GetAllRecordsResponse);
}